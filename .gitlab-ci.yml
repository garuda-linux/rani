stages: [test, build, release]
include:
  - 'https://gitlab.com/garuda-linux/tools/gitlab-ci-commons/-/raw/main/templates/commitizen.gitlab-ci.yml'
  - 'https://gitlab.com/garuda-linux/tools/gitlab-ci-commons/-/raw/main/templates/tag-to-release.gitlab-ci.yml'
check-packagelists:
  # Check whether all packages advertised in the package lists are available
  stage: test
  image: archlinux:latest
  script:
    - curl -o /etc/pacman.d/mirrorlist "https://archlinux.org/mirrorlist/?country=DE&protocol=https&use_mirror_status=on"
    - sed -i 's/^#//' /etc/pacman.d/mirrorlist && echo -e "RemoteFileSigLevel = Never\nParallelDownloads = 10" >> /etc/pacman.conf
    - echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
    - pacman-key --init
    - pacman-key --recv-key 0706B90D37D9B881 3056513887B78AEB --keyserver keyserver.ubuntu.com
    - pacman-key --lsign-key 0706B90D37D9B881 3056513887B78AEB
    - pacman --noconfirm -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-'{keyring,mirrorlist}'.pkg.tar.zst'
    - echo -e "[garuda]\\nInclude = /etc/pacman.d/chaotic-mirrorlist\\n[chaotic-aur]\\nInclude = /etc/pacman.d/chaotic-mirrorlist" >>/etc/pacman.conf
    - echo "" >>/etc/pacman.conf
    - pacman -Syu --noconfirm --needed nodejs paru
    - corepack enable
    - pnpm check-pkglists
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
build-linux:
  image: node:22-slim
  stage: build
  before_script:
    - npm install --global corepack@latest
    - corepack enable
    - corepack prepare pnpm@latest-10 --activate
    - pnpm config set store-dir .pnpm-store
  script:
    - |
      apt update && apt install -y \
        libglib2.0-dev libdbus-1-dev libatk1.0-dev \
        libnotify-dev libasound2-dev libcap-dev \
        libcups2-dev libxtst-dev libgtk-3-dev \
        libxss1 libnss3-dev libarchive-tools
    - COREPACK_ENABLE_DOWNLOAD_PROMPT=0 pnpm -r install --frozen-lockfile --shamefully-hoist
    - pnpm run compile
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - .pnpm-store
  artifacts:
    when: on_success
    access: all
    expire_in: '30 days'
    paths:
      - dist/*.AppImage
      - dist/*.pacman
