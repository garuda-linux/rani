stages: [checks, build, release]
check-commitizen:
  # Check the current commit message for compliance with commitizen
  stage: checks
  image: nixpkgs/nix-flakes:latest
  variables:
    GIT_STRATEGY: none
  script: nix run nixpkgs#commitizen -- check --message "$CI_COMMIT_TITLE"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
check-packagelists:
  # Check whether all packages advertised in the package lists are available
  stage: checks
  image: archlinux:latest
  script:
    - curl -o /etc/pacman.d/mirrorlist "https://archlinux.org/mirrorlist/?country=DE&protocol=https&use_mirror_status=on"
    - sed -i 's/^#//' /etc/pacman.d/mirrorlist && echo -e "RemoteFileSigLevel = Never\nParallelDownloads = 10" >> /etc/pacman.conf
    - echo -e "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf
    - pacman-key --init
    - pacman-key --recv-key 0706B90D37D9B881 3056513887B78AEB --keyserver keyserver.ubuntu.com
    - pacman-key --lsign-key 0706B90D37D9B881 3056513887B78AEB
    - pacman --noconfirm -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-'{keyring,mirrorlist}'.pkg.tar.zst'
    - echo -e "[garuda]\\nInclude = /etc/pacman.d/chaotic-mirrorlist\\n[chaotic-aur]\\nInclude = /etc/pacman.d/chaotic-mirrorlist" >>/etc/pacman.conf
    - echo "" >>/etc/pacman.conf
    - pacman -Syu --noconfirm --needed nodejs-lts-jod paru
    - corepack enable pnpm
    - pnpm install
    - pnpm check-pkglists
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
build-linux:
  image: node:22-slim
  stage: build
  script:
    - apt-get update
    - |
      DEBIAN_FRONTEND=noninteractive apt-get install -y \
        libwebkit2gtk-4.1-dev \
        build-essential \
        curl \
        wget \
        file \
        libxdo-dev \
        libssl-dev \
        libayatana-appindicator3-dev \
        librsvg2-dev \
        libsoup-3.0-0
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable -y
    - source "$HOME/.cargo/env"
    - corepack enable pnpm
    - pnpm install
    - pnpm run tauri build
  artifacts:
    when: on_success
    access: all
    expire_in: '30 days'
    paths:
      - src-tauri/target/release/bundle/deb/*.deb
      - src-tauri/target/release/bundle/appimage/*.AppImage
      - src-tauri/target/release/bundle/rpm/*.rpm
tag-to-release:
  stage: release
  # https://gitlab.com/gitlab-org/release-cli/-/blob/master/Dockerfile
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  dependencies:
    - build-linux
  variables:
    GIT_STRATEGY: none
  script:
    - apk add --no-cache --upgrade git py3-pip
    - pip install --break-system-packages -U commitizen
    - git clone "$CI_PROJECT_URL.git"
    - cd "$CI_PROJECT_NAME"
    - CHANGELOG=$(cz changelog "$CI_COMMIT_TAG" --dry-run | sed /^Invalid/d)
    - release-cli create --name "$CI_COMMIT_TAG" --description "$CHANGELOG" \ --tag-name "$CI_COMMIT_TAG"
  rules:
    - if: $CI_COMMIT_TAG != null
